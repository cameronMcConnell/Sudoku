{"ast":null,"code":"import _regeneratorRuntime from\"/home/angry-dogman/.repos/Sudoku/sudoku/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/angry-dogman/.repos/Sudoku/sudoku/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/angry-dogman/.repos/Sudoku/sudoku/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{useState,useEffect}from'react';import'./App.css';// Interface for options button rendering.\n// Interface for objects that make up the elements of the board.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){// Create the board.\nvar createBoard=function createBoard(){var b=[];for(var i=0;i<9;i++){b.push([]);for(var j=0;j<9;j++){b[i].push({val:0,index:i*9+j,isStatic:false});}}return b;};// The board that will be edited and changed to solve the sudoku.\n// Needed to make 2D array of special objects that have unqiue indexs.\nvar _useState=useState(createBoard()),_useState2=_slicedToArray(_useState,2),board=_useState2[0],setBoard=_useState2[1];// 0 = easy, 1 = medium, 2 = hard\nvar _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),curDiff=_useState4[0],setCurDiff=_useState4[1];// Used for check button press.\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),solved=_useState6[0],setSolved=_useState6[1];// Used to help solved state in button on click event.\nvar _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),newBoard=_useState8[0],setNewBoard=_useState8[1];// used to initially show loading screen until get request is completed.\nvar _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setLoading=_useState10[1];// Used to render difficulty buttons.\nvar difficulties=['Easy','Medium','Hard'];// Used for animation after solving board.\nvar animations=[];// Used to render options buttons and their colors. \nvar options=[{title:'Solve',brdrClr:'#0cf345'},{title:'Check',brdrClr:'#f30cba'}];// Set initial board difficulty to easy.\nuseEffect(function(){generateEasy();},[]);// Switch to chosen difficuly.\nvar chooseDifficulty=function chooseDifficulty(diff){setNewBoard(true);setSolved(false);switch(diff){case 0:generateEasy();break;case 1:generateMedium();break;case 2:generateHard();break;}};// Switch to choose option.\nvar optionsLogic=function optionsLogic(option){var result;switch(option){case'Solve':solveBoard();setNewBoard(false);setSolved(true);break;case'Check':result=checkSolution();setNewBoard(false);if(result){setSolved(true);}break;}};// Api request for easy board.\nfunction generateEasy(){return _generateEasy.apply(this,arguments);}// Api request for medium board.\nfunction _generateEasy(){_generateEasy=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data,b,i,j;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://sugoku.onrender.com/board?difficulty=easy');case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;setLoading(false);b=createBoard();for(i=0;i<9;i++){for(j=0;j<9;j++){b[i][j].val=data.board[i][j];if(b[i][j].val){b[i][j].isStatic=true;}}}setCurDiff(0);setBoard(b);case 11:case\"end\":return _context.stop();}},_callee);}));return _generateEasy.apply(this,arguments);}var generateMedium=function generateMedium(){fetch('https://sugoku.onrender.com/board?difficulty=medium').then(function(response){return response.json();}).then(function(data){var b=createBoard();for(var i=0;i<9;i++){for(var j=0;j<9;j++){b[i][j].val=data.board[i][j];if(b[i][j].val){b[i][j].isStatic=true;}}}setCurDiff(1);setBoard(b);}).catch(function(error){console.log('Error: ',error);});};// Api request for hard board.\nvar generateHard=function generateHard(){fetch('https://sugoku.onrender.com/board?difficulty=hard').then(function(response){return response.json();}).then(function(data){var b=createBoard();for(var i=0;i<9;i++){for(var j=0;j<9;j++){b[i][j].val=data.board[i][j];if(b[i][j].val){b[i][j].isStatic=true;}}}setCurDiff(2);setBoard(b);}).catch(function(error){console.log('Error: ',error);});};// Checks to see if valid sudoku board.\nvar checkSolution=function checkSolution(){var rows=Array.from({length:9},function(){return new Set();});var cols=Array.from({length:9},function(){return new Set();});var boxes=Array.from({length:9},function(){return new Set();});for(var i=0;i<9;i++){for(var j=0;j<9;j++){var boxInd=Math.floor(i/3)*3+Math.floor(j/3);if(board[i][j].val===0||board[i][j].val<0||board[i][j].val>9){return false;}if(rows[i].has(board[i][j].val)){return false;}else{rows[i].add(board[i][j].val);}if(cols[j].has(board[i][j].val)){return false;}else{cols[j].add(board[i][j].val);}if(boxes[boxInd].has(board[i][j].val)){return false;}else{boxes[boxInd].add(board[i][j].val);}}}return true;};// Check if current number in position is valid.\nvar isValid=function isValid(i,j,val,boardCopy){for(var k=0;k<9;k++){if(boardCopy[i][k].val===val||boardCopy[k][j].val===val){return false;}}var i0=Math.floor(i/3)*3;var j0=Math.floor(j/3)*3;for(var l=0;l<3;l++){for(var m=0;m<0;m++){if(boardCopy[i+i0][j+j0].val===val){return false;}}}return true;};// Brute-force and backtracking algorithm to solve the board.\nvar solve=function solve(boardCopy){for(var i=0;i<9;i++){for(var j=0;j<9;j++){if(boardCopy[i][j].val===0){for(var val=1;val<10;val++){if(isValid(i,j,val,boardCopy)){animations.push([boardCopy[i][j].index,val]);boardCopy[i][j].val=val;if(solve(boardCopy)){return true;};animations.push([boardCopy[i][j].index,0]);boardCopy[i][j].val=0;}}return false;}}}return true;};// Goes through the animations array and shows the process on the board.\nvar animate=function animate(){var inputs=Array.from(document.querySelectorAll('input'));var inputsDict={};for(var _i=0,_inputs=inputs;_i<_inputs.length;_i++){var input=_inputs[_i];inputsDict[input.name]=input;}var kft=0;var animationSpeed=1.5;var _loop=function _loop(){var x=_animations[_i2];setTimeout(function(){if(x[1]===0){inputsDict[x[0].toString()].value='';}else{inputsDict[x[0].toString()].value=x[1].toString();}},kft*4);kft+=animationSpeed;};for(var _i2=0,_animations=animations;_i2<_animations.length;_i2++){_loop();}animations=[];setBoard(board);};// Solves the board and does animation.\nvar solveBoard=function solveBoard(){var boardCopy=JSON.parse(JSON.stringify(board));solve(boardCopy);animate();};// Used for on change event from input in grid.\nvar updateBoard=function updateBoard(e,i,j){e.preventDefault();var inputVal=parseInt(e.target.value);if(inputVal&&inputVal<10&&inputVal>-1){board[i][j].val=inputVal;}else{board[i][j].val=0;}setBoard(board);};// Sets all non-static values in board to empty.\nvar clearBoard=function clearBoard(){var inputs=Array.from(document.querySelectorAll('input'));for(var _i3=0,_inputs2=inputs;_i3<_inputs2.length;_i3++){var input=_inputs2[_i3];input.value='';}for(var i=0;i<9;i++){for(var j=0;j<9;j++){if(!board[i][j].isStatic){board[i][j].val=0;}}}setSolved(false);setNewBoard(true);setBoard(board);};// Decides classname for td elements given index values.\nvar determineClassName=function determineClassName(i,j){var className='';if(!((i+1)%3)){className+='bottom-border';}if(!((j+1)%3)){className+=' right-border';}if(!i){className+=' top-border';}if(!j){className+=' left-border';}return className;};// Resolved after init api get request.\nif(loading){return/*#__PURE__*/_jsxs(\"div\",{id:\"loading-container\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-repeat fa-spin\",id:\"loading-icon\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Loading\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"header\",{id:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Sudoku\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Difficulty: \",curDiff===0?'Easy':curDiff===1?'Medium':'Hard']},curDiff),/*#__PURE__*/_jsxs(\"div\",{id:\"header-button-container\",children:[difficulties.map(function(diffs,ind){return/*#__PURE__*/_jsx(\"button\",{className:\"diff-button\",onClick:function onClick(){return chooseDifficulty(ind);},children:diffs},ind);}),/*#__PURE__*/_jsx(\"button\",{className:\"diff-button\",style:{borderColor:'#26f7fd'},onClick:function onClick(){return clearBoard();},children:\"Clear\"}),options.map(function(option){return/*#__PURE__*/_jsx(\"button\",{className:\"diff-button\",style:{borderColor:option.brdrClr},onClick:function onClick(){return optionsLogic(option.title);},children:option.title},option.title);}),!newBoard&&solved?/*#__PURE__*/_jsx(\"div\",{className:\"thumb-div\",children:\"\\uD83D\\uDC4D\"}):'',!newBoard&&!solved?/*#__PURE__*/_jsx(\"div\",{className:\"thumb-div\",children:\"\\uD83D\\uDC4E\"}):'']})]}),/*#__PURE__*/_jsx(\"div\",{id:\"board-container\",children:/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsx(\"tbody\",{children:board.map(function(row,i){return/*#__PURE__*/_jsx(\"tr\",{children:row.map(function(col,j){return/*#__PURE__*/_jsx(\"td\",{className:determineClassName(i,j),children:col.isStatic?col.val:/*#__PURE__*/_jsx(\"input\",{name:col.index.toString(),onChange:function onChange(e){return updateBoard(e,i,j);}})});})});})})})})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","App","createBoard","b","i","push","j","val","index","isStatic","_useState","_useState2","_slicedToArray","board","setBoard","_useState3","_useState4","curDiff","setCurDiff","_useState5","_useState6","solved","setSolved","_useState7","_useState8","newBoard","setNewBoard","_useState9","_useState10","loading","setLoading","difficulties","animations","options","title","brdrClr","generateEasy","chooseDifficulty","diff","generateMedium","generateHard","optionsLogic","option","result","solveBoard","checkSolution","_generateEasy","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_callee$","_context","prev","next","fetch","sent","json","stop","then","catch","error","console","log","rows","Array","from","length","Set","cols","boxes","boxInd","Math","floor","has","add","isValid","boardCopy","k","i0","j0","l","m","solve","animate","inputs","document","querySelectorAll","inputsDict","_i","_inputs","input","name","kft","animationSpeed","_loop","x","_animations","_i2","setTimeout","toString","value","JSON","parse","stringify","updateBoard","e","preventDefault","inputVal","parseInt","target","clearBoard","_i3","_inputs2","determineClassName","className","id","children","map","diffs","ind","onClick","style","borderColor","row","col","onChange"],"sources":["/home/angry-dogman/.repos/Sudoku/sudoku/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\n\n// Interface for options button rendering.\ninterface optionsObject {\n  title: string,\n  brdrClr: string\n}\n\n// Interface for objects that make up the elements of the board.\ninterface boardObject {\n  val: number,\n  index: number,\n  isStatic: boolean\n}\n\nconst App = () => {\n\n  // Create the board.\n  const createBoard = (): boardObject[][] => {\n    let b: boardObject[][] = [];\n    \n    for (let i: number = 0; i < 9; i++) {\n      b.push([]);\n      for (let j: number = 0; j < 9; j++) {\n        b[i].push({val: 0, index: (i * 9) + j, isStatic: false});\n      }\n    }\n\n    return b;\n  }\n  \n  // The board that will be edited and changed to solve the sudoku.\n  // Needed to make 2D array of special objects that have unqiue indexs.\n  let [board, setBoard] = useState<boardObject[][]>(createBoard());\n\n  // 0 = easy, 1 = medium, 2 = hard\n  let [curDiff, setCurDiff] = useState<number>(0);\n\n  // Used for check button press.\n  const [solved, setSolved] = useState<boolean>(false);\n\n  // Used to help solved state in button on click event.\n  const [newBoard, setNewBoard] = useState<boolean>(true);\n\n  // used to initially show loading screen until get request is completed.\n  let [loading, setLoading] = useState<boolean>(true);\n  \n  // Used to render difficulty buttons.\n  const difficulties: string[] = ['Easy', 'Medium', 'Hard'];\n\n  // Used for animation after solving board.\n  let animations: number[][] = [];\n  \n  // Used to render options buttons and their colors. \n  const options: optionsObject[] = [\n    {\n      title: 'Solve',\n      brdrClr: '#0cf345'\n    }, \n    { \n      title: 'Check',\n      brdrClr: '#f30cba'\n    }\n  ];\n\n  // Set initial board difficulty to easy.\n  useEffect(() => { generateEasy() }, []);\n\n  // Switch to chosen difficuly.\n  const chooseDifficulty = (diff: number): void => {\n    setNewBoard(true);\n    setSolved(false);\n\n    switch (diff) {\n      case 0:\n        generateEasy();\n        break;\n      case 1:\n        generateMedium();\n        break;\n      case 2:\n        generateHard();\n        break;\n    }\n  }\n\n  // Switch to choose option.\n  const optionsLogic = (option: string) => {\n    let result: boolean;\n    switch (option) {\n      case 'Solve':\n        solveBoard();\n        setNewBoard(false);\n        setSolved(true);\n        break;\n      case 'Check':\n        result= checkSolution();\n        setNewBoard(false);\n        if (result) {\n          setSolved(true);\n        }\n        break;\n    }\n  }\n\n  // Api request for easy board.\n  async function generateEasy(): Promise<void> {\n    const response: Response = await fetch('https://sugoku.onrender.com/board?difficulty=easy');\n    const data = await response.json();\n    setLoading(false);\n\n    let b: boardObject[][] = createBoard();\n    for (let i: number = 0; i < 9; i++) {\n      for (let j: number = 0; j < 9; j++) {\n        b[i][j].val = data.board[i][j];\n        if ( b[i][j].val ) { b[i][j].isStatic = true; }\n      }\n    }\n    setCurDiff(0);\n    setBoard(b);\n  }\n\n  // Api request for medium board.\n  const generateMedium = (): void => {\n    fetch('https://sugoku.onrender.com/board?difficulty=medium')\n    .then(response => response.json())\n    .then(data => {\n      let b: boardObject[][] = createBoard();\n      for (let i: number = 0; i < 9; i++) {\n        for (let j: number = 0; j < 9; j++) {\n          b[i][j].val = data.board[i][j];\n          if ( b[i][j].val ) { b[i][j].isStatic = true; }\n        }\n      }\n      setCurDiff(1);\n      setBoard(b);\n    })\n    .catch(error => {\n      console.log('Error: ', error);\n    })\n  }\n\n  // Api request for hard board.\n  const generateHard = (): void => {\n    fetch('https://sugoku.onrender.com/board?difficulty=hard')\n    .then(response => response.json())\n    .then(data => {\n      let b: boardObject[][] = createBoard();\n      for (let i: number = 0; i < 9; i++) {\n        for (let j: number = 0; j < 9; j++) {\n          b[i][j].val = data.board[i][j];\n          if ( b[i][j].val ) { b[i][j].isStatic = true; }\n        }\n      }\n      setCurDiff(2);\n      setBoard(b);\n    })\n    .catch(error => {\n      console.log('Error: ', error);\n    })\n  }\n\n  // Checks to see if valid sudoku board.\n  const checkSolution = (): boolean => {\n    let rows: Set<number>[] = Array.from({ length: 9 }, () => new Set());\n    let cols: Set<number>[] = Array.from({ length: 9}, () => new Set());\n    let boxes: Set<number>[] = Array.from({ length: 9}, () => new Set());\n\n    for (let i: number = 0; i < 9; i++) {\n      for (let j: number = 0; j < 9; j++) {\n        let boxInd: number = Math.floor(i / 3) * 3 + Math.floor(j / 3); \n        \n        if (board[i][j].val === 0 || board[i][j].val < 0 || board[i][j].val > 9) {\n          return false;\n        }\n\n        if (rows[i].has(board[i][j].val)) {\n          return false;\n        } else {\n          rows[i].add(board[i][j].val);\n        }\n\n        if (cols[j].has(board[i][j].val)) {\n          return false;\n        } else {\n          cols[j].add(board[i][j].val);\n        }\n\n        if (boxes[boxInd].has(board[i][j].val)) {\n          return false;\n        } else {\n          boxes[boxInd].add(board[i][j].val)\n        }\n      }\n    }\n    return true;\n  }\n\n  // Check if current number in position is valid.\n  const isValid = (i: number, j: number, val: number, boardCopy: boardObject[][]): boolean => {\n    for (let k: number = 0; k < 9; k++) {\n      if (boardCopy[i][k].val === val || boardCopy[k][j].val === val) {\n        return false;\n      }\n    }\n\n    var i0: number = Math.floor(i / 3) * 3;\n    var j0: number = Math.floor(j / 3) * 3;\n\n    for (let l: number = 0; l < 3; l++) {\n      for (let m: number = 0; m < 0; m++) {\n        if (boardCopy[i + i0][j + j0].val === val) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  // Brute-force and backtracking algorithm to solve the board.\n  const solve = (boardCopy: boardObject[][]): boolean => {\n    for (let i: number = 0; i < 9; i++) {\n      for (let j: number = 0; j < 9; j++) {\n        if (boardCopy[i][j].val === 0) {\n          for (let val: number = 1; val < 10; val++) {\n            if (isValid(i, j, val, boardCopy)) {\n              animations.push([boardCopy[i][j].index, val]);\n              boardCopy[i][j].val = val;\n              if (solve(boardCopy)) {return true};\n              animations.push([boardCopy[i][j].index, 0]);\n              boardCopy[i][j].val = 0;\n            }\n          }\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  // Goes through the animations array and shows the process on the board.\n  const animate = (): void => {\n    let inputs: HTMLInputElement[] = Array.from(document.querySelectorAll('input'));\n    let inputsDict: {[key: string]: HTMLInputElement} = {};\n    \n    for (let input of inputs) {\n      inputsDict[input.name] = input;\n    }\n    \n    let kft: number = 0;\n    let animationSpeed: number = 1.5;\n    \n    for (const x of animations) {\n      setTimeout(() => {\n        if (x[1] === 0) {\n          inputsDict[x[0].toString()].value = '';\n        } else {\n          inputsDict[x[0].toString()].value = x[1].toString();\n        }\n      }, (kft * 4));\n      kft += animationSpeed;\n    }\n\n    animations = [];\n    setBoard(board);\n  }\n\n  // Solves the board and does animation.\n  const solveBoard = (): void => {\n    var boardCopy: boardObject[][] = JSON.parse(JSON.stringify(board));\n    solve(boardCopy);\n    animate();\n  }\n\n  // Used for on change event from input in grid.\n  const updateBoard = (e: React.ChangeEvent<HTMLInputElement>, i: number, j: number) => {\n    e.preventDefault();\n    let inputVal: number | undefined = parseInt(e.target.value);\n    \n    if (inputVal && inputVal < 10 && inputVal > -1 ) {\n      board[i][j].val = inputVal;\n    } else {\n      board[i][j].val = 0;\n    }\n    \n    setBoard(board);\n  }\n\n  // Sets all non-static values in board to empty.\n  const clearBoard = (): void => {\n    let inputs: HTMLInputElement[] = Array.from(document.querySelectorAll('input'));\n\n    for (let input of inputs) { input.value = ''; }\n\n    for (let i: number = 0; i < 9; i++) {\n      for (let j: number = 0; j < 9; j++) {\n        if (!board[i][j].isStatic) { board[i][j].val = 0; }\n      }\n    }\n\n    setSolved(false);\n    setNewBoard(true);\n    setBoard(board);\n  }\n\n  // Decides classname for td elements given index values.\n  const determineClassName = (i: number, j: number): string => {\n    let className: string = '';\n    if (!((i + 1) % 3)) {\n      className += 'bottom-border';\n    }\n    if (!((j + 1) % 3)) {\n      className += ' right-border';\n    }\n    if (!i) {\n      className += ' top-border'\n    }\n    if (!j) {\n      className += ' left-border'\n    }\n    return className;\n  }\n\n  // Resolved after init api get request.\n  if (loading) {\n    return ( \n      <div id='loading-container'>\n        <i className=\"fa fa-repeat fa-spin\" id='loading-icon'></i>\n        <h1>Loading</h1>\n      </div>\n    );\n  }\n\n  return (\n    <div className='container'>\n      <header id='header'>\n        <h1>Sudoku</h1>\n        <h2 key={curDiff}>Difficulty: {curDiff === 0 ? 'Easy': curDiff === 1 ? 'Medium' : 'Hard'}</h2>\n        <div id='header-button-container'>\n          {difficulties.map((diffs: string, ind: number) => (\n            <button className='diff-button' key={ind} onClick={() => chooseDifficulty(ind)}>{diffs}</button>\n          ))}\n          <button className='diff-button' style={{borderColor: '#26f7fd'}} onClick={() => clearBoard()}>Clear</button>\n          {options.map((option: optionsObject) => (\n            <button className='diff-button' style={{borderColor: option.brdrClr}}\n            key={option.title} onClick={() => optionsLogic(option.title)}>{option.title}</button>\n          ))}\n          {(!newBoard && solved) ? <div className='thumb-div'>👍</div>: ''}\n          {(!newBoard && !solved) ? <div className='thumb-div'>👎</div>: ''}\n        </div>\n      </header>\n      <div id='board-container'>\n        <table>\n          <tbody>\n            {board.map((row: boardObject[], i: number) => (\n              <tr>\n                {row.map((col: boardObject, j: number) => (\n                  <td className={determineClassName(i, j)}>\n                    {col.isStatic ? col.val\n                     : <input name={col.index.toString()} onChange={(e) => updateBoard(e, i, j)}></input>}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}